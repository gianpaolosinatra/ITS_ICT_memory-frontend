{"version":3,"sources":["index.js"],"names":["console","log","images","barbie","myData","score","record","card01","card02","counterCards","flippedCards","flaggame","card02img","card01img","moves","$","document","ready","scoreing","recording","fetch","then","result","json","data","createTable","click","css","addClass","children","attr","removeClass","deck2","length","checkWinner","checkLoser","setTimeout","scoreText","html","alert","window","location","reload","localStorage","getItem","recordText","setItem","table","rowNum","colNum","i","row","j","col","append","fillTable","shuffle","array","sort","Math","random","deck","slice","rowPos","colPos","find","randomCardIndex","cardName","cardI","imgCode","nameOfCard","htmlCard"],"mappings":"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","file":"memory-frontend.e31bb0bc.js","sourceRoot":"..","sourcesContent":["\r\nimport images from './img/*.png';\r\nconsole.log(images.barbie);\r\n\r\nlet myData;\r\nlet score = 1000;\r\nlet record = 0;\r\nvar card01;\r\nvar card02;\r\nvar counterCards = 0;\r\nlet flippedCards = 0;\r\nvar flaggame = false;\r\nvar card02img = 0;\r\nvar card01img = 0;\r\nvar moves = 0;\r\n\r\n$( document ).ready(()=> {\r\n    \r\n    scoreing();\r\n    recording();\r\n    \r\n    fetch(\"http://localhost:3000/memoryData\")\r\n        .then(result => {\r\n            return result.json()\r\n        })\r\n        .then(data => {\r\n        // Work with JSON data here\r\n            myData = data;\r\n            console.log(myData);\r\n            createTable(myData); \r\n            $(\".flip-card\").click(\r\n                \r\n                function() {\r\n                    if (!card01){\r\n                        card01 = $(this);\r\n                        moves++;\r\n                        $(card01).css(\"pointer-events\",\"none\");\r\n                        counterCards++;\r\n                        $( this ).addClass(\"flip-card-click\");\r\n                        $( this ).addClass(\"can-flip\");\r\n                         card01img = $(this).children().children('.flip-card-back').children().attr('data-cardvalue');\r\n                        console.log(card01img); \r\n                        console.log(card01);\r\n                        flaggame=true;\r\n\r\n                        return;\r\n\r\n                    }\r\n                    else {\r\n                        card02 = $(this);\r\n                        moves++;\r\n                        $(card02).css(\"pointer-events\",\"none\");\r\n                        counterCards++;\r\n                        $( this ).addClass(\"flip-card-click\");\r\n                        $( this ).addClass(\"can-flip\");\r\n                        console.log(\"Questa Ã¨ card2\");\r\n                         card02img = $(this).children().children('.flip-card-back').children().attr('data-cardvalue');\r\n                        console.log(card02img); \r\n                        flaggame=true;\r\n                    }\r\n                    if(card01!=false && card02!=false && flaggame){\r\n                       \r\n                        if (card01img == card02img){\r\n                            console.log(\"card1 e card2 sono girate e sono uguali\");\r\n                            $(\".flip-card-click\").removeClass(\"can-flip\");\r\n                            $(\".flip-card-click\").removeClass(\"flip-card\");\r\n                            $(\".flip-card-click\").addClass(\"flipped\");\r\n                            $(card02).css(\"pointer-events\",\"none\");\r\n                            $(card01).css(\"pointer-events\",\"none\");\r\n                            card01=false;\r\n                            card02=false;\r\n                            flippedCards += 2;\r\n                            console.log(flippedCards);\r\n                            console.log(deck2.length);\r\n                            checkWinner();\r\n                            checkLoser();\r\n                            recording(); \r\n                        }\r\n                        else if (card01img != card02img || counterCards>2){                         \r\n                            console.log(\"card1 e card2 sono girate ma non sono uguali\");\r\n                           /* \r\n                            //remove points in match for a wrong action\r\n                            if(moves%2==0){\r\n                                checkWinner();\r\n                                checkLoser();\r\n                                recording();\r\n                            }*/\r\n                            //console.log(score);\r\n                            counterCards =0; \r\n        \r\n                            $(\"#table\").css(\"pointer-events\",\"none\");//third card fippable fixing PART1 - if users click third card before animation time (0.5s) third card can flip otherwise third card can't\r\n                            setTimeout(function(){\r\n                                $(\".can-flip\").removeClass(\"flip-card-click\");\r\n                                $(\".can-flip\").removeClass(\".can-flip\");\r\n                                $(card01).css(\"pointer-events\",\"auto\");\r\n                                $(card02).css(\"pointer-events\",\"auto\");\r\n                                card01=false;\r\n                                card02=false;\r\n                                $(\"#table\").css(\"pointer-events\",\"auto\"); //third card fippable fixing PART2\r\n                            }, 1500);\r\n                                \r\n                        \r\n                            \r\n                        }\r\n                    }\r\n                }\r\n         \r\n            );\r\n\r\n        }\r\n    );\r\n\r\n\r\n    \r\n    \r\n}); \r\n\r\n\r\n\r\nfunction scoreing(){\r\n    var scoreText =  `<p class=\"font-weight-bold scoreP rounded\">SCORE <br>${score}</p>`;\r\n    score-=5;\r\n    $('.score').html(scoreText);\r\n}\r\n\r\nfunction checkLoser(){\r\n    if (score<=0){\r\n        var scoreText =  `<p class=\"font-weight-bold scoreP rounded\">SCORE <br>0</p>`;\r\n        $('.score').html(scoreText);\r\n        if(alert('You\\'re a loser man! \\n Go Home!\\nif you are brave click \\'ok\\' and play again')){}\r\n        else window.location.reload(); \r\n    }\r\n    else\r\n        scoreing();\r\n}\r\n\r\nfunction recording(){\r\n    record = localStorage.getItem('record');\r\n    var recordText =  `<p class=\"font-weight-bold recordP rounded\">RECORD <br>${record}</p>`;\r\n    $('.record').html(recordText);\r\n    \r\n}\r\n\r\nfunction checkWinner(){\r\n    if(flippedCards>=deck2.length){\r\n        if(score>record)\r\n            record=score;\r\n        localStorage.setItem('record', record);\r\n        if(alert(`You\\'re a Winner man! \\n Your score is ${score}\\nif you are brave click \\'ok\\' and play again`)){}\r\n        else window.location.reload();\r\n\r\n    }\r\n}\r\n/*\r\nfunction removeEmtyDiv(){\r\n    if $(col-sm).haschild\r\n}*/\r\n\r\n\r\nfunction createTable(myData){\r\n    //console.log(myData);\r\n    let table = $('#table');\r\n    //check if exist rows and columns\r\n    if (myData.rowNum > 0 && myData.colNum > 0){\r\n        //cycle for create empty rows\r\n        for(var i =0; i<myData.rowNum; i++){\r\n            \r\n            var row = '<br><div class = \"row rounded  row'+i+'\">';\r\n\r\n            $('.row'+i)\r\n            // cycle for create columns\r\n            for(var j =0; j<myData.colNum; j++){\r\n                var col= '<div class = \"col-sm rounded d-flex justify-content-center align-items-center col'+j+'\"></div><br>';\r\n                row += col;\r\n\r\n            }\r\n            row+='<div>';\r\n            //fill each row with its columns\r\n            table.append(row);\r\n        }\r\n        fillTable(myData);\r\n        //startGame();\r\n    }\r\n}\r\n\r\nlet deck2 = [];\r\nfunction fillTable(myData){\r\n    let table = $('#table');\r\n\r\n    function shuffle(array) {\r\n        array.sort(() => Math.random() - 0.5);\r\n    }\r\n   \r\n    //clone storage.deck in deck2      \r\n    deck2 = myData.deck.slice();\r\n    //shuffle deck2\r\n    shuffle(deck2);\r\n\r\n    for (var i=0; i < myData.deck.length; i++){\r\n\r\n        var rowNum = myData.deck[i].rowPos;\r\n        var colNum = myData.deck[i].colPos;\r\n\r\n        var row = table.find('.row'+rowNum);\r\n        var col = row.find('.col'+colNum)\r\n\r\n        var randomCardIndex = deck2[i].cardName; //fill table with deck2 (deck2 is a shuffled copy of myData.deck)\r\n        //console.log(randomCardIndex)\r\n        var cardI = myData.deck[randomCardIndex-1].imgCode;\r\n\r\n        var nameOfCard = images[cardI];\r\n\r\n        var htmlCard =\r\n            `<div class=\"flip-card d-flex justify-content-center rounded\">\r\n                <div class=\"flip-card-inner rounded d-flex justify-content-center\">\r\n                    <div class=\"flip-card-front rounded \">\r\n                        <img class=\"rounded mx-auto d-block\" src=\"./dorso.e3878d79.png\">\r\n                    </div>\r\n                    <div class=\"flip-card-back rounded\">\r\n                        <img data-cardvalue=\"`+nameOfCard+`\" class=\"rounded mx-auto d-block \" src= .`+ nameOfCard +`>\r\n                    </div>\r\n                </div>\r\n            </div>`;\r\n       \r\n        col.append(htmlCard);\r\n    }\r\n}\r\n\r\n"]}